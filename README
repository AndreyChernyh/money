== Money class

This money class is based on the example from the ActiveRecord doc:
http://api.rubyonrails.org/classes/ActiveRecord/Aggregations/ClassMethods.html

Its in production use at http://www.snowdevil.ca and I haven't found any major issues
so far. 
The main reason to open source it is because It might be useful to other people and 
I hope i'll get some feedback on how to improve the class. 

I bundled the exporter with the money class since some tests depend on it and I figured
that most applications which need to deal with Money also need to deal with proper 
exporting. 

== Download

http://www.leetsoft.com/rails/money/money.tar.gz

If you plan to enhance this class please get a copy from svn so that
you can easily submit patches

svn: svn://leetsoft.com/money/trunk

== Useage

Use the compose_of helper to let active record deal with embedding the money
object in your models. The following example requires a cents and a currency field.

  class ProductUnit < ActiveRecord::Base
    belongs_to :product
    composed_of :price, :class_name => "Money", :mapping => %w(cents currency)

    private        
      validate :cents_not_zero
    
      def cents_not_zero
        errors.add("cents", "cannot be zero or less") unless cents > 0
      end
    
      validates_presence_of :sku, :currency
      validates_uniqueness_of :sku        
  end
  
  
== Code

If you have any improvements please email them to tobi [at] leetsoft.com 
